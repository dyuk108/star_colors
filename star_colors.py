# -*- coding: utf-8 -*-
#
# Функции по преобразованию значений эффективной температуры звезды или её спектрального класса,
# а также показателя B-V в цвет RGB.
# Функция t2rgb() превращает Teff в RGB,
# функция sptype2t() выдаёт для данного спектрального класса/подкласса типичную Teff,
# функция bv2t() превращает показатель цвета B-V в эффективную темературу Teff.
# Клыков Д.Ю., 2025. https://dyuk108.ru

import numpy as np

# Функция преобразования цветовой температуры в цвет RGB (#RRGGBB).
# Теория взята отсюда https://tannerhelland.com/2012/09/18/convert-temperature-rgb-algorithm-code.html ,
# но подправлено мною для более яркого отображения цвета. В оригинале почти не отображается жёлтый.
def t2rgb(t):
    # Red.
    if t <= 6000:
        red = 0.0026*t+239
    elif t <= 7000:
        red = -5937/500000*t+81461/250
    else:
        red = 329.698*(t/100-60)**-0.133

    # Green.
    if t < 4500:
        green = 99.47*np.log(t/100)-161.12
    elif t < 7500:
        green = -(((t-6500)*0.003)**2)+251
    else:
        green = 288.122*((t/100-60)**-0.0755) + 5

    # Blue.
    if t < 2500:
        blue = (7/250)*t
    elif t <= 6650:
        blue = 138.5177*np.log(t/100-10)-305.0448
    else:
        blue = 254

    rgb = (int(red), int(green), int(blue))
    for i in range(3):
        if rgb[i] < 0:
            rgb[i] = 0
        elif rgb[i] > 255:
            rgb[i] = 255
    return '#%02x%02x%02x' % rgb

# Функция преобразования сп. класса (в виде цифры) в эффективную темперктуру Teff.
# В сп. классе буквы O, B... заменяются на цифры 0, 1. К ней дописывается цифра подкласса.
def sptype2t(sp):
    if sp == '':
        return None # нет указания сп. класса
    
    # список типичных температур звёзд спектральных классов от O0 до M9. Информация взята из Википедии.
    t_arr = (50000, 47000, 45000, 43500, 42000, 40600, 38870, 36870, 34880, 32800, # класс O
            29000, 24500, 19500, 17000, 15400, 14400, 13400, 12500, 11500, 10700, # класс B
            9900, 9400, 8900, 8520, 8300, 8150, 7950, 7830, 7600, 7380, # класс A
            7250, 7120, 7000, 6750, 6600, 6550, 6400, 6250, 6170, 6010, # класс F
            5900, 5800, 5750, 5680, 5600, 5580, 5500, 5470, 5430, 5350, # класс G
            5280, 5110, 4940, 4700, 4500, 4400, 4300, 4130, 4000, 3850, # класс K
            3759, 3624, 3489, 3354, 3219, 3084, 2949, 2814, 2679, 2544) # класс M

    # Для индексирования массива t_arr превращаем букву класса в второй разряд десятичного числа.
    types = {'O': 0, 'B': 10, 'A': 20, 'F': 30, 'G': 40, 'K': 50, 'M': 60}

    # Редко встречающиеся спектральные классы.
    # Углеродные звёзды (С).
    type_c = {'C0': 4500, 'C1': 4300, 'C2': 4100, 'C3': 3900, 'C4': 3650, 'C5': 3450, 'C6': 2850, 'C7': 2700}
    # Звёзды Вольфа-Райе (WN, WC).
    type_w = {'WN2': 141_000, 'WN3': 85000, 'WN4': 70000, 'WN5': 60000, 'WN6': 56000, 'WN7': 50000, 'WN8': 45000, 'WN': 35000,
            'WO2': 200_000, 'WC4': 117_000, 'WC5': 83000, 'WC6': 78000, 'WC7': 71000, 'WC8': 60000, 'WC9': 44000}

    letter = sp[0].upper()
    if letter == 'W':
        if sp[:3] in type_w: # звёзды Вольфа-Райе
            return type_w[sp[:3]]
        else:
            return 60000 # для класса WN5
    
    # Белые карлики, первая буква D. Дальше может идти одна из стандартных букв спектров.
    # Заменяем на эти стандартные с подклассом 5.
    if letter == 'D':
        letter = sp[1].upper() # следующая буква
        if letter in types:
            sp = letter + '5' # далее обрабатываются как обычные звёзды
        else:
            return None

    # Циркониевые звёзды (класс S) и углеродные N-класса по температуре идентичны классу M.
    if letter == 'S' or letter == 'N':
        letter = 'M'

    if letter == 'C': # углеродные звёзды
        if sp[:2] in type_c:
            return type_c[sp[:2]]
        else:
            return 3450 # для класса C5
    if sp[:2] == 'CI': # информация не найдена. Одна такая звёзда есть, известна её Teff.
        return 5400

    # Стандартные классы.
    if letter in types: # если есть сп. класс в списке
        sp_dig = types[letter] # заменяем на цифру (для второго разряда числа)
    else:
        return None # тип нестандартный или не указан
    
    # Подкласс.
    if sp[1].isdigit(): # если второй символ - цифра
        sp_dig += int(sp[1])
    else:
        sp_dig += 5 # возьмём середину сп. класса
    
    return t_arr[sp_dig]

# Функция преобразования показателя B-V в температуру Teff.
# Формула для преобразования взята отсюда https://stackoverflow.com/questions/21977786/star-b-v-color-index-to-apparent-rgb-color
def bv2t(bv):
    if bv < -0.5:
        bv = -0.5
    t = 4600.0 * ((1.0 / ((0.92 * bv) + 1.7)) +(1.0 / ((0.92 * bv) + 0.62)) )
    return t
